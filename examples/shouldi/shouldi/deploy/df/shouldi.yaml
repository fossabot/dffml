configs: {}
definitions:
  bandit_output:
    name: bandit_output
    primitive: Dict[str, Any]
  get_single_output:
    name: get_single_output
    primitive: Dict[str, Any]
  get_single_spec:
    name: get_single_spec
    primitive: List[str]
  package:
    name: package
    primitive: str
  package_json:
    name: package_json
    primitive: Dict[str, Any]
  package_src_dir:
    name: package_src_dir
    primitive: str
  package_url:
    name: package_url
    primitive: str
  package_version:
    name: package_version
    primitive: str
  safety_check_number_of_issues:
    name: safety_check_number_of_issues
    primitive: int
flow:
  bandit:
    pkg:
    - pkg.contents.directory
  pkg.cleanup:
    directory:
    - pkg.contents.directory
  pkg.contents:
    url:
    - pkg.url.url
  pkg.json:
    package:
    - seed
  pkg.url:
    response_json:
    - pkg.json.response_json
  pkg.version:
    response_json:
    - pkg.json.response_json
  safety:
    package:
    - seed
    version:
    - pkg.version.version
linked: true
operations:
  bandit:
    inputs:
      pkg: package_src_dir
    name: run_bandit
    outputs:
      report: bandit_output
    stage: processing
  output:
    inputs:
      spec: get_single_spec
    name: get_single
    outputs:
      output: get_single_output
    stage: output
  pkg.cleanup:
    inputs:
      directory: package_src_dir
    name: cleanup_pypi_package
    outputs: {}
    stage: cleanup
  pkg.contents:
    inputs:
      url: package_url
    name: pypi_package_contents
    outputs:
      directory: package_src_dir
    stage: processing
  pkg.json:
    inputs:
      package: package
    name: pypi_package_json
    outputs:
      response_json: package_json
    stage: processing
  pkg.url:
    inputs:
      response_json: package_json
    name: pypi_package_url
    outputs:
      url: package_url
    stage: processing
  pkg.version:
    inputs:
      response_json: package_json
    name: pypi_latest_package_version
    outputs:
      version: package_version
    stage: processing
  safety:
    inputs:
      package: package
      version: package_version
    name: safety_check
    outputs:
      issues: safety_check_number_of_issues
    stage: processing
seed:
- definition: get_single_spec
  value:
  - safety_check_number_of_issues
  - bandit_output
